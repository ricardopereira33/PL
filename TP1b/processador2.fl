%option noyywrap
%{
#include <glib.h>
#include <string.h>
char* changeLetters(char* letter, char c, int val);
void transfereChar(char* text, char* letter);
void rewritten(char* text);
GHashTable* actores;
char text[64];
char* reverseText;
int indice=0;
%}
%x AUTHOR EDITOR
L       [a-zA-Z.úàáâéíçãì]
%%
	char* letter;
author { 
	BEGIN AUTHOR;
}
editor {
	BEGIN EDITOR;
}
<AUTHOR>[\ \t]*=[\ \t]*[\"{] {
	printf("author = {");
}
<AUTHOR>[\"}], {
	rewritten(text);
	indice=0;
	text[0]=0;
	printf("},");
	BEGIN INITIAL;
}
<AUTHOR>\  {}
<AUTHOR>and\  {
	rewritten(text);
	indice=0;
	text[0]=0;
	printf("%s",yytext);
}
<AUTHOR>{L}* {
	strcpy(text+indice,yytext);
	indice+=strlen(yytext);
	text[indice++]=' ';
	text[indice]=0;
}
<EDITOR>[\ \t]*=[\ \t]*[\"{] {
	printf("editor = {");
}
<EDITOR>[\"}], {
	printf("},");
	BEGIN INITIAL;
}
<EDITOR>["{].*\n?[^=]*["}] {
	BEGIN INITIAL;
}
<*>\\['~^`]. {
	letter=changeLetters(yytext+2,(yytext+1)[0],0);
	transfereChar(text,letter);
}
<*>\\´. {
	letter=changeLetters(yytext+3,(yytext+1)[0],1);
	transfereChar(text,letter);
}  
%%

int checkChar(char* text, char c){
    int len = strlen(text);
    int i;
    for(i = 0; i < len; i++){
      if(text[i] == c){
       	return 1;
      }
   }
   return 0;
}

void rewritten(char* text){
	char** lista = (char**) malloc(sizeof(char*)*8);
	char* res = (char*) malloc(sizeof(char)*strlen(text));
	char* fim;
	int i=0;

	char* token = strtok(text," ");
	while(token!=NULL){
		fim = (char*) malloc(sizeof(char)*32);
		strcpy(fim,token);
		lista[i]=fim;
		i++;
		token = strtok(NULL," ");
	}
	lista[i]=NULL;
	
	strcpy(res,lista[i-1]);
	strcpy(res+strlen(res),", ");

	for(int j=0; j< i-1; j++){
		if(checkChar(lista[j],'.')){
			strcpy(res+strlen(res),lista[j]);
			strcpy(res+strlen(res)," ");
		}
		else{
			char buf[32];
			sprintf(buf,"%c. ",lista[j][0]);
			strcpy(res+strlen(res),buf);
		}	
	}
	printf("%s",res); 
}

void transfereChar(char* text, char* letter){
	text[indice-1]=letter[0];
	text[indice++]=letter[1];
	text[indice]=0;
}

char* changeLetters(char* letter,char c, int val){
	switch(letter[0]){
		case 'a':	if(c == '\'' || val == 1) return("á");
					else if(c == '~') return ("ã");
					else if(c == '`') return ("à");
					break;
		case 'o':	if(c == '\'' ||  val == 1) return ("ó");
					else if(c == '~') return ("õ");
					else if(c == '`') return ("ò");
					break;
		case 'e':	if(c == '\'' ||  val == 1) return ("é");
					else if(c == '^') return ("ê");
					break;
		case 'i':	if(c == '\'' ||  val == 1) return ("í");
					else if(c == '`') return ("ì");
					break;
		case 'u':	if(c == '\'' ||  val == 1) return ("ú");
					else if(c == '`') return ("ù");
					break;
		case 'A':	if(c == '\'' ||  val == 1) return ("Á");
					else if(c == '~') return ("Ã");
					else if(c == '`') return ("À");
					break;
		case 'O':	if(c == '\'' ||  val == 1) return ("Ó");
					else if(c == '~') return ("Õ");
					else if(c == '`') return ("Ò");
					break;
		case 'E':	if(c == '\'' ||  val == 1) return ("É");
					else if(c == '^') return ("Ê");
					break;
		case 'I':	if(c == '\'' ||  val == 1) return ("Í");
					else if(c == '`') return ("Ì");
					break;
		case 'U':	if(c == '\'' ||  val == 1) return ("Ú");
					else if(c == '`') return ("Ù");
					break;
	}
	return letter;
}

int main (int argc, char* argv[]) {

    if(argc == 2)
      yyin = fopen(argv[1], "r");

    yylex();

    return 0;
}